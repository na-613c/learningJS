{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/background.jpg","assets/images/upload.svg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","isOwner","onDoubleClick","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","aboutForm","aboutEdit","name","CreateField","Input","cn","lfjEdit","lfj","type","skills","Textarea","aboutMe","contacts","keys","map","key","contactsItems","ProfileData","goToEditMode","content","about","edit","onClick","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","href","target","rel","ProfileInfo","savePhoto","saveProfile","Preloader","background","src","alt","padding","avatar","customFileUpload","multiple","files","changeImg","photos","large","photosUri","contentProfile","tooltip","fullName","userId","formData","then","initialValues","Post","message","likesCount","item","photo","like","maxLength300","maxLengthCreator","MyPosts","React","memo","postElements","postData","reverse","post","index","AddNewPostFormReact","values","addPost","newPostText","posts","Field","component","placeholder","validate","required","textarea","btnAdd","MyPostsContainer","connect","state","profilePage","defaultPhotos","dispatch","addPostActionCreator","Profile","ProfileContainer","this","match","params","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","id","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c39c9a2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__3Rz7f\",\"padding\":\"ProfileInfo_padding__18xmB\",\"contentProfile\":\"ProfileInfo_contentProfile__JevcE\",\"profile\":\"ProfileInfo_profile__1OXFr\",\"customFileUpload\":\"ProfileInfo_customFileUpload__1Vaut\",\"background\":\"ProfileInfo_background__3gAiF\",\"aboutForm\":\"ProfileInfo_aboutForm__12Ga1\",\"error\":\"ProfileInfo_error__3_u4R\",\"content\":\"ProfileInfo_content__3MsA3\",\"aboutEdit\":\"ProfileInfo_aboutEdit__Z2Ov0\",\"about\":\"ProfileInfo_about__29uU2\",\"name\":\"ProfileInfo_name__35YHR\",\"edit\":\"ProfileInfo_edit__1nV0Z\",\"lfj\":\"ProfileInfo_lfj__DwvaB\",\"lfjEdit\":\"ProfileInfo_lfjEdit__2_WQb\",\"skills\":\"ProfileInfo_skills__SRaOh\",\"aboutMe\":\"ProfileInfo_aboutMe__3Sgk6\",\"contacts\":\"ProfileInfo_contacts__zMARG\",\"contactsItems\":\"ProfileInfo_contactsItems__2soF4\",\"tooltip\":\"ProfileInfo_tooltip__2Kg5y\"};","module.exports = __webpack_public_path__ + \"static/media/background.82500b16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/upload.c5d3b40c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2GuOG\",\"form\":\"MyPosts_form__10Zn9\",\"textarea\":\"MyPosts_textarea__2WcIT\",\"btnAdd\":\"MyPosts_btnAdd__3neuM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3kr-f\",\"content\":\"Post_content__11FkZ\",\"like\":\"Post_like__1OtRI\",\"photo\":\"Post_photo__2mxdk\",\"message\":\"Post_message__2HkRM\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!props.isOwner &&\r\n            <div>\r\n                <span>{props.status || 'No status'}</span>\r\n            </div>\r\n            }\r\n            {(!editMode  && props.isOwner)&&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onChange={onStatusChange}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </>);\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {CreateField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport cn from \"classnames\"\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.aboutForm}>\r\n            <div className={s.aboutEdit}>\r\n                <button>SAVE</button>\r\n                {error &&\r\n                <div className={s.error}>\r\n                    {error}\r\n                </div>\r\n                }\r\n                <div className={s.name}>\r\n                    <div>\r\n                        <b>Full name</b>:\r\n                    </div>\r\n                    <div>\r\n                        {CreateField(\"Full name\", \"fullName\", Input, [])}\r\n                    </div>\r\n                </div>\r\n                <div className={cn(s.lfjEdit, s.lfj)}>\r\n                    <div>\r\n                        <b>Looking for a job</b>:\r\n                    </div>\r\n                    <div>\r\n                        {CreateField(\"\", \"lookingForAJob\", Input, [], {type: 'checkbox'})}\r\n                    </div>\r\n                </div>\r\n                <div className={s.skills}>\r\n                    <div>\r\n                        <b>My professional skills</b>:\r\n                    </div>\r\n                    <div>\r\n                        {CreateField(\"My professional skills\", \"lookingForAJobDescription\", Textarea, [])}\r\n                    </div>\r\n                </div>\r\n                <div className={s.aboutMe}>\r\n                    <div>\r\n                        <b>About me</b>:\r\n                    </div>\r\n                    <div>\r\n                        {CreateField(\"About me\", \"aboutMe\", Input, [])}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className={s.contacts}>\r\n                <h2>Contacts : </h2>{Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contactsItems}>\r\n                    <div>\r\n                        <b>{key}</b>:\r\n                    </div>\r\n                    <div>\r\n                        {CreateField(`${key}`, `contacts.${key}`, Input, [])}\r\n                    </div>\r\n\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'editProfile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader\";\r\nimport photosUri from \"../../../assets/images/user.jpg\"\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport background from \"../../../assets/images/background.jpg\"\r\nimport changeImg from \"../../../assets/images/upload.svg\"\r\n\r\n\r\nconst dataNotSpecified = \" Данные не указаны\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) return <Preloader/>;\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) savePhoto(e.target.files[0])\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then(() => setEditMode(false));\r\n    };\r\n\r\n    return (\r\n        <div className=\"shadow\">\r\n            <div className={s.background}>\r\n                <img\r\n                    src={background}\r\n                    alt=\"\"/>\r\n            </div>\r\n            <div className={s.padding}>\r\n                <div className={s.profile}>\r\n                    <div className={s.avatar}>\r\n                        {isOwner &&\r\n                        <div>\r\n                            <label className={s.customFileUpload}>\r\n                                <input type=\"file\" multiple onChange={onMainPhotoSelected}/>\r\n                                <i>\r\n                                    <img src={changeImg} alt=\"photoData\"/>Сhange\r\n                                </i>\r\n                            </label>\r\n                        </div>\r\n\r\n                        }\r\n                        <img src={profile.photos.large || photosUri} alt=\"photos\"/>\r\n                    </div>\r\n                    <div className={s.contentProfile}>\r\n                        <h1 className={s.tooltip}> {profile.fullName} <span>id: {profile.userId}</span></h1>\r\n                        <ProfileStatusWithHooks status={status}\r\n                                                updateStatus={updateStatus}\r\n                                                isOwner={isOwner}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                editMode\r\n                    ? <ProfileDataForm onSubmit={onSubmit}\r\n                                       profile={profile}\r\n                                       initialValues={profile}/>\r\n                    : <ProfileData goToEditMode={() => setEditMode(true)}\r\n                                   profile={profile}\r\n                                   isOwner={isOwner}/>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.about}>\r\n                {isOwner &&\r\n                <button className={s.edit} onClick={goToEditMode}>EDIT</button>\r\n                }\r\n                <div className={s.lfj}>\r\n                    <b>Looking for a job :</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                </div>\r\n                {profile.lookingForAJob &&\r\n                <div className={s.skills}>\r\n                    <b>My professional skills :</b> {profile.lookingForAJobDescription}\r\n                </div>}\r\n                <div className={s.aboutMe}>\r\n                    <b>About me :</b> {!profile.aboutMe ? dataNotSpecified : profile.aboutMe}\r\n                </div>\r\n            </div>\r\n            <div className={s.contacts}>\r\n                <h2>Contacts:</h2> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={s.contactsItems}>\r\n            <div>\r\n                <b>{contactTitle}</b>:\r\n            </div>\r\n            <div>\r\n                {!contactValue\r\n                    ? dataNotSpecified\r\n                    : <a href={contactValue} target=\"_blank\" rel=\"noopener noreferrer\"> {contactValue}</a>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = ({message, likesCount, photos}) => {\r\n    return (\r\n        <div className={s.item + \" padding content\"}>\r\n            <div>\r\n                <img className={s.photo}\r\n                     src={photos}\r\n                     alt=\"photos\"/>\r\n            </div>\r\n            <div className={s.content}>\r\n                <div className={s.message}>\r\n                    {message}\r\n                </div>\r\n                <div className={s.like}>\r\n                    {likesCount}\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postElements = [...props.postData]\r\n        .reverse()\r\n        .map((post, index) => <Post key={index}\r\n                                    photos={props.photos}\r\n                                    message={post.message}\r\n                                    likesCount={`${post.likesCount} ♥`}/>);\r\n\r\n    let addPost = (values) => props.addPost(values.newPostText);\r\n\r\n    return (<div>\r\n            <div className=\"padding shadow\">\r\n                <b>You can add a new post:</b>\r\n                <br/>\r\n                <br/>\r\n                <AddNewPostFormReact onSubmit={addPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n\r\n    // let handleSubmit = (event) => {\r\n    //     props.handleSubmit().bind(this);\r\n    //     event.target.reset();\r\n    // };\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.form} >\r\n            <Field component={Textarea}\r\n                   name={'newPostText'}\r\n                   placeholder=\"enter your post\"\r\n                   validate={[required, maxLength300]}\r\n                   className={s.textarea} />\r\n            <button className={s.btnAdd} >Add post</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddNewPostFormReact = reduxForm({form: 'ProfileAddPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n","// eslint-disable-next-line no-unused-vars\r\nimport React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer'\r\nimport {connect} from \"react-redux\";\r\nimport defaultPhotos from \"../../../assets/images/user.jpg\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        photos: (!state.profilePage.profile || !state.profilePage.profile.photos.large) ? defaultPhotos : state.profilePage.profile.photos.large\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => dispatch(addPostActionCreator(newPostText))\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={isOwner}\r\n                         profile={profile}\r\n                         status={status}\r\n                         updateStatus={updateStatus}\r\n                         savePhoto={savePhoto}\r\n                         saveProfile={saveProfile}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>);\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus,saveProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                         saveProfile={this.props.saveProfile}\r\n                />\r\n            </div>);\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto,saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}