{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","DialogItem","id","name","key","dialog","activeClassName","active","to","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","inputText","Field","component","Textarea","placeholder","validate","required","Dialogs","messagesPage","postMessageThunkCreator","dialogsElements","dialogData","map","d","messagesElements","messagesData","m","dialogs","dialogElements","messages","allMessages","path","values","newMessageBody","mapStateToProps","state","isAuth","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,OAAS,wBAAwB,YAAc,6BAA6B,OAAS,wBAAwB,QAAU,yBAAyB,SAAW,0BAA0B,UAAY,6B,uFCYxRC,EATC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAEC,SACbH,EAAMG,U,QCQJC,EAXI,SAAC,GAAe,IAAdC,EAAa,EAAbA,GAAGC,EAAU,EAAVA,KACpB,OACI,kBAAC,IAAD,CAASC,IAAKF,EACLJ,UAAWC,IAAEM,OACbC,gBAAiBP,IAAEQ,OACnBC,GAAE,mBAAcN,IACpBC,I,yCCAPM,EAAeC,YAAiB,KA2ChCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdL,SAACf,GACpB,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,yBAAKjB,UAAWC,IAAEiB,WACd,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXhB,KAAM,iBACNiB,YAAY,qBACZC,SAAU,CAACC,IAAUb,KAC5B,6CAODc,EA1CC,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,aAAaC,EAA8B,EAA9BA,wBAEvBC,EAAkBF,EAAaG,WAAWC,KAAI,SAACC,GAAD,OAAO,kBAAC,EAAD,CAAYzB,IAAKyB,EAAE3B,GAAIC,KAAM0B,EAAE1B,KAAMD,GAAI2B,EAAE3B,QAChG4B,EAAmBN,EAAaO,aAAaH,KAAI,SAACI,GAAD,OAAO,kBAAC,EAAD,CAAS5B,IAAK4B,EAAE9B,GAAIF,QAASgC,EAAEhC,aAM3F,OACI,yBAAKF,UAAWC,IAAEkC,QAAU,YACxB,yBAAKnC,UAAWC,IAAEmC,gBACbR,GAEL,6BACI,yBAAK5B,UAAWC,IAAEoC,UACd,yBAAKrC,UAAWC,IAAEqC,YAAa,WAC3B,kBAAC,IAAD,CAAOC,KAAK,WAAWnB,UAAW,kBAAMY,MAE5C,yBAAKhC,UAAU,WACX,kBAACa,EAAD,CAAqBG,SAfrB,SAACwB,GACjB,OAAQb,EAAwBa,EAAOC,wB,wCCd3CC,EAAkB,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,S,OCURE,sBACXC,aAPkB,SAACJ,GACnB,MAAO,CACHjB,aAAciB,EAAMjB,gBAKC,CAACC,+BDRE,SAACqB,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKnD,MAAM6C,OACT,gBAACI,EAAcE,KAAKnD,OADI,gBAAC,IAAD,CAAUW,GAAI,iBAJV,GAEXyC,aAOhC,OAAOJ,YAAQL,EAARK,CAAyBE,KCFrBH,CAGbrB","file":"static/js/4.cf881984.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2NghM\",\"dialogElements\":\"Dialogs_dialogElements__1EJtd\",\"dialog\":\"Dialogs_dialog__2qiWA\",\"allMessages\":\"Dialogs_allMessages__jP5CN\",\"active\":\"Dialogs_active__1vbe2\",\"message\":\"Dialogs_message__E0AVN\",\"messages\":\"Dialogs_messages__AdpHE\",\"inputText\":\"Dialogs_inputText__mBAEz\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = ({id,name}) => {\r\n    return (\r\n        <NavLink key={id}\r\n                 className={s.dialog}\r\n                 activeClassName={s.active}\r\n                 to={`/dialogs/${id}`}>\r\n            {name}\r\n        </NavLink>\r\n    )\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport {Route} from \"react-router-dom\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst Dialogs = ({messagesPage,postMessageThunkCreator,}) => {\r\n\r\n    let dialogsElements = messagesPage.dialogData.map((d) => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messagesElements = messagesPage.messagesData.map((m) => <Message key={m.id} message={m.message}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        return  postMessageThunkCreator(values.newMessageBody)\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs + \" content\"}>\r\n            <div className={s.dialogElements}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div>\r\n                <div className={s.messages}>\r\n                    <div className={s.allMessages +\" target\"}>\r\n                        <Route path=\"/dialogs\" component={() => messagesElements}/>\r\n                    </div>\r\n                    <div className=\"padding\">\r\n                        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.inputText}>\r\n                <Field component={Textarea}\r\n                       name={'newMessageBody'}\r\n                       placeholder=\"enter your message\"\r\n                       validate={[required, maxLength100]}/>\r\n                <button>Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\nexport default Dialogs;\r\n","import * as React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'../login'}/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n\r\n};","// eslint-disable-next-line no-unused-vars\r\nimport React from 'react';\r\nimport {postMessageThunkCreator} from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {postMessageThunkCreator}),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}